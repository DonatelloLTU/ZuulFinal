#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\r\n\r\n\ This\ class\ is\ part\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ \r\n\r\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \r\n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ direction,\ the\ room\ stores\ a\ reference\r\n\ to\ the\ neighboring\ room.\r\n\ \r\n\ @author\ \ Donatas\ Vasauskas\r\n\ @version\ 2019.12.11-01\r\n
comment1.params=description\ teleportation
comment1.target=Room(java.lang.String,\ int)
comment1.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ @param\ description\ The\ room's\ description.\r\n\ @param\ teleportation\ it\ shows\ if\ the\ room\ is\ teleportation\ room\ or\ not.\r\n
comment10.params=direction
comment10.target=Room\ getExit(java.lang.String)
comment10.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ @param\ direction\ The\ exit's\ direction.\r\n\ @return\ The\ room\ in\ the\ given\ direction.\r\n
comment11.params=
comment11.target=java.util.ArrayList\ artifactDescriptions()
comment11.text=\r\n\ This\ method\ gives\ the\ artifacts\ description\ within\ the\ room,\r\n\ @return\ artifactString,\ gives\ the\ String\ of\ artifacts\ description\ when\ called.\r\n
comment12.params=
comment12.target=java.util.ArrayList\ artifactNames()
comment12.text=\r\n\ This\ method\ gives\ the\ artifacts\ name\ within\ the\ room,\r\n\ @return\ artifactString\ returns\ artifacts\ name.\r\n
comment13.params=
comment13.target=java.util.ArrayList\ getArtifactList()
comment13.text=\r\n\ This\ method\ is\ to\ get\ artifact\ list\ within\ the\ room,\r\n\ @return\ justList,\ returns\ the\ list\ of\ artifacts\ located\ in\ the\ room.\r\n
comment14.params=
comment14.target=boolean\ teleport()
comment14.text=\r\n\ This\ method\ is\ boolean\ to\ check\ if\ teleportation\ int\ is\ 0\ or\ 1,\r\n\ @return\ true,\ is\ true\ when\ rooms\ teleportation\ number\ is\ 1,\r\n\ @return\ false,\ is\ false\ when\ rooms\ teleportation\ number\ is\ 0\ or\ anything\ else.\r\n
comment2.params=direction\ neighbor
comment2.target=void\ setExits(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ the\ exits\ of\ this\ room.\ \ Every\ direction\ either\ leads\r\n\ to\ another\ room\ or\ is\ null\ (no\ exit\ there).\r\n\ @param\ direciton\ is\ String\ direction\ defined\ by\ the\ room\ exits.\r\n\ @param\ neighboor\ is\ Room\ defines\ what\ neighboors\ does\ the\ room\ have.\r\n
comment3.params=
comment3.target=boolean\ artifacts()
comment3.text=\r\n\ Checks\ does\ the\ room\ has\ any\ artifacts.\r\n
comment4.params=artifactName\ descriptionArtifact\ weight
comment4.target=void\ addArtifact(java.lang.String,\ java.lang.String,\ int)
comment4.text=\r\n\ Method\ to\ add\ artifact\ to\ the\ room,\r\n\ @param\ artifactName,\ String\ with\ artifacts\ name.\r\n\ @param\ descriptionArtifact,\ String\ describingg\ the\ artifact.\r\n\ @param\ weight,\ is\ int\ defines\ how\ heavy\ is\ the\ artifact.\r\n
comment5.params=artifactName
comment5.target=void\ removeArtifact(java.lang.String)
comment5.text=\r\n\ This\ method\ removes\ artifact\ from\ the\ room,\ uses\ artifacts\ name\ in\ order\ to\ work,\r\n\ @param\ artifactName,\ is\ a\ String\ with\ artifacts\ name.\r\n\ \r\n
comment6.params=artifact
comment6.target=void\ placeArtifact(Artifact)
comment6.text=\r\n\ This\ method\ places\ artifact\ in\ the\ room,\r\n\ @param\ artifact,\ is\ class\ Artifact\ instance.\r\n
comment7.params=
comment7.target=java.lang.String\ getDescription()
comment7.text=\r\n\ @return\ The\ description\ of\ the\ room.\r\n
comment8.params=
comment8.target=java.lang.String\ getLongDescription()
comment8.text=\r\n\ Return\ a\ description\ of\ the\ room.\r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment9.params=
comment9.target=java.lang.String\ getExitString()
comment9.text=\r\n\ *\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ @return\ Details\ of\ the\ room's\ exits.\r\n
numComments=15
